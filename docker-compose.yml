services:
  jenkins:
    build:
      context: .
      dockerfile: jenkins/Dockerfile
      args:
        DOCKER_GID: 999  # Replace with host Docker GID
    container_name: jenkins
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Allows Jenkins to control Docker
      - .:/workspace
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    restart: unless-stopped

  mlflow-server:
    image: ghcr.io/mlflow/mlflow:v2.16.2
    container_name: mlflow-server
    command: >
      mlflow server
      --backend-store-uri sqlite:///mlflow/mlflow.db
      --default-artifact-root /mlruns
      --host 0.0.0.0
      --port 5000
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
      - ./mlflow:/mlflow
    restart: always

  trainer:
    build: .
    container_name: diabetes-trainer
    depends_on:
      - mlflow-server
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow-server:5000
    command: python train_diabetes_model.py
    volumes:
      - ./model:/app/model
      - ./mlruns:/app/mlruns
    restart: "no"

  diabetes-api:
    build: .
    container_name: diabetes-api
    depends_on:
      - mlflow-server
      - trainer
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow-server:5000
    command: ["./wait-for-mlflow.sh", "./wait-for-model.sh", "uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ./model:/app/model
      - ./mlruns:/app/mlruns
    ports:
      - "8000:8000"
    restart: always

volumes:
  jenkins_home:
