services:
  # ----------------------
  # Jenkins CI Server
  # ----------------------
  jenkins:
    build:
      context: .
      dockerfile: jenkins/Dockerfile
      args:
        DOCKER_GID: 999
    container_name: jenkins
    ports:
      - "9000:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/workspace
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    restart: unless-stopped

  # ----------------------
  # MLflow Tracking Server
  # ----------------------
  mlflow-server:
    image: ghcr.io/mlflow/mlflow:v2.16.2
    container_name: mlflow-server
    command: >
      mlflow server
      --backend-store-uri sqlite:///mlflow/mlflow.db
      --default-artifact-root /mlruns
      --host 0.0.0.0
      --port 5000
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
      - ./mlflow:/mlflow
    restart: always

  # ----------------------
  # Model Trainer
  # ----------------------
  trainer:
    build:
      context: ./trainer
      dockerfile: Dockerfile
    container_name: diabetes-trainer
    depends_on:
      - mlflow-server
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow-server:5000
      - GIT_PYTHON_REFRESH=quiet
    volumes:
      - ./model:/app/model
      - ./mlruns:/app/mlruns
    restart: "no"

  # ----------------------
  # FastAPI Prediction API
  # ----------------------
  diabetes-api:
    build:
      context: ./diabetes-api
      dockerfile: Dockerfile
    container_name: diabetes-api
    depends_on:
      - mlflow-server
      - trainer
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow-server:5000
      - MODEL_PATH=/app/model/diabetes_rf_model.pkl
    volumes:
      - ./model:/app/model
      - ./mlruns:/app/mlruns
    ports:
      - "8000:8000"
    command: ["/app/start-api.sh"]
    restart: always

  # ----------------------
  # Prometheus
  # ----------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always
    depends_on:
      - diabetes-api

  # ----------------------
  # Grafana
  # ----------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/grafana-diabetes-dashboard.json:/etc/grafana/provisioning/dashboards/diabetes-dashboard.json:ro
    depends_on:
      - prometheus
    restart: always

volumes:
  jenkins_home:
